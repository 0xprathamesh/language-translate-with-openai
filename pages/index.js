import Head from 'next/head'
import { useState } from 'react';
import { languages } from '@/languages';
import {MdContentCopy} from 'react-icons/md'
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import Link from 'next/link';


export default function Home() {
  const [input, setInput] = useState('');
  const [output, setOutput] = useState('');
  const [selectedLanguage, setSelectedLanguage] = useState(languages[0]);
  const [loading, setLoading] = useState(false);
  console.log(selectedLanguage);

  const handleInput = (e) => {
    setInput(e.target.value);
  };

  const handleSelect = (e) => {
    e.preventDefault();
    setSelectedLanguage(e.target.value);
  };

  const handleTranslate = async () => {
    setLoading(true);
    const response = await fetch('/api/translate', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${process.env.OPENAI_API_KEY }`,
      },
      body: JSON.stringify({
        prompt: `${input} Translate this text to ${selectedLanguage}`
      }),
    });
    console.log(response);
    const data = await response.json();
    setOutput(data.result)
    setLoading(false)
    console.log(data);
  };
  const handleCopyText = () => {
    toast('Copied to Clipboard')
    navigator.clipboard.writeText(output);
  };
  return (
    <>
      <Head>
        <title>Language Translator</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
     <section className=' grid h-screen place-content-center w-full '>
      <ToastContainer />
      <div className='mb-10 text-center'>
        <h1 className='text-3xl font-bold tracking-wide'>Multilingual AI</h1>
      </div>
      <div className='flex flex-col items-center justify-center '>
        <textarea onChange={handleInput}  placeholder='Input Text to Translate' className='w-80 appearance-none rounded-md border border-[#10a37f] p-5 outline-[#10a37f] overflow' />
        <div className='my-5'>
          <select id="languages" value={selectedLanguage} onChange={handleSelect}
            className='border border-gray-300 text-sm text-[#353740] rounded-md outline-[#10a37f] block w-80 mb-4 p-2.5 '
            >
          {languages.map((language, index) => (
            <option key={index} value={language}>
              {language}
            </option>
          ))}
          </select>
          <button type='button' onClick={handleTranslate} className='p-2.5 text-center w-80 bg-[#10a37f] rounded-md text-white font-medium       text-md' disabled={loading}>
            {loading ? (
              <div>
                <span>Translating...</span>
              </div>
                ) : (
                 <span>Translate</span>
            )}
          </button>
        </div>
        {output && (
          <textarea  value={output} className='w-80 appearance-none rounded-md border border-[#10a37f] p-5 outline-[#10a37f] overflow mb-5' />
        )}
       
        <button onClick={handleCopyText} className='p-2.5 text-center w-80 bg-white border border-gray-300 rounded-md text-[#10a37f] mb-5'>
        
          Copy Text <MdContentCopy className='inline-flex ml-2' size={20} />
        </button>

      </div>
      <div className='text-center'>
        Made w/ ❤️ by <Link href='https://github.com/Prathamesh48'>Pr@thamesh</Link>
      </div>
     </section>
    </>
  );
}
